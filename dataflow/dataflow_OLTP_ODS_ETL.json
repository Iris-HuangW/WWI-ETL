{
	"name": "dataflow_OLTP_ODS_ETL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sales_orders",
						"type": "DatasetReference"
					},
					"name": "sourceSales"
				},
				{
					"dataset": {
						"referenceName": "sales_customers",
						"type": "DatasetReference"
					},
					"name": "sourceCustomers"
				},
				{
					"dataset": {
						"referenceName": "sales_invoiceLines",
						"type": "DatasetReference"
					},
					"name": "sourceInvoiceLines"
				},
				{
					"dataset": {
						"referenceName": "sales_invoices",
						"type": "DatasetReference"
					},
					"name": "sourceInvoices"
				},
				{
					"dataset": {
						"referenceName": "warehouse_PackageTypes",
						"type": "DatasetReference"
					},
					"name": "sourcePackageTypes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sale_staging",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "Filter"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Join3"
				},
				{
					"name": "DerivedColumn"
				},
				{
					"name": "Join4"
				}
			],
			"script": "parameters{\n\tcutoff_time as string ('2000-01-01  00:00:00')\n}\nsource(output(\n\t\tOrderID as integer,\n\t\tCustomerID as integer,\n\t\tSalespersonPersonID as integer,\n\t\tPickedByPersonID as integer,\n\t\tContactPersonID as integer,\n\t\tBackorderOrderID as integer,\n\t\tOrderDate as date,\n\t\tExpectedDeliveryDate as date,\n\t\tCustomerPurchaseOrderNumber as string,\n\t\tIsUndersupplyBackordered as boolean,\n\t\tComments as string,\n\t\tDeliveryInstructions as string,\n\t\tInternalComments as string,\n\t\tPickingCompletedWhen as timestamp,\n\t\tLastEditedBy as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [OrderID], [CustomerID], [SalespersonPersonID], FROM [Sales].[Orders]',\n\tformat: 'query') ~> sourceSales\nsource(output(\n\t\tCustomerID as integer,\n\t\tCustomerName as string,\n\t\tBillToCustomerID as integer,\n\t\tCustomerCategoryID as integer,\n\t\tBuyingGroupID as integer,\n\t\tPrimaryContactPersonID as integer,\n\t\tAlternateContactPersonID as integer,\n\t\tDeliveryMethodID as integer,\n\t\tDeliveryCityID as integer,\n\t\tPostalCityID as integer,\n\t\tCreditLimit as decimal(18,2),\n\t\tAccountOpenedDate as date,\n\t\tStandardDiscountPercentage as decimal(18,3),\n\t\tIsStatementSent as boolean,\n\t\tIsOnCreditHold as boolean,\n\t\tPaymentDays as integer,\n\t\tPhoneNumber as string,\n\t\tFaxNumber as string,\n\t\tDeliveryRun as string,\n\t\tRunPosition as string,\n\t\tWebsiteURL as string,\n\t\tDeliveryAddressLine1 as string,\n\t\tDeliveryAddressLine2 as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryLocation as binary,\n\t\tPostalAddressLine1 as string,\n\t\tPostalAddressLine2 as string,\n\t\tPostalPostalCode as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [CustomerID], [BillToCustomerID], \\n[DeliveryCityID] FROM [Sales].[Customers]',\n\tformat: 'query') ~> sourceCustomers\nsource(output(\n\t\tInvoiceID as integer,\n\t\tTotalDryItems as integer,\n\t\tTotalChillerItems as integer,\n\t\tOrderID as integer,\n\t\tSalespersonPersonID as integer,\n\t\tInvoiceDate as date,\n\t\tConfirmedDeliveryTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [InvoiceID], [TotalDryItems], [TotalChillerItems], [OrderID], [SalespersonPersonID], [InvoiceDate], [ConfirmedDeliveryTime] FROM [WideWorldImporters].[Sales].[Invoices]',\n\tformat: 'query') ~> sourceInvoiceLines\nsource(output(\n\t\tInvoiceID as integer,\n\t\tCustomerID as integer,\n\t\tBillToCustomerID as integer,\n\t\tOrderID as integer,\n\t\tDeliveryMethodID as integer,\n\t\tContactPersonID as integer,\n\t\tAccountsPersonID as integer,\n\t\tSalespersonPersonID as integer,\n\t\tPackedByPersonID as integer,\n\t\tInvoiceDate as date,\n\t\tCustomerPurchaseOrderNumber as string,\n\t\tIsCreditNote as boolean,\n\t\tCreditNoteReason as string,\n\t\tComments as string,\n\t\tDeliveryInstructions as string,\n\t\tInternalComments as string,\n\t\tTotalDryItems as integer,\n\t\tTotalChillerItems as integer,\n\t\tDeliveryRun as string,\n\t\tRunPosition as string,\n\t\tReturnedDeliveryData as string,\n\t\tConfirmedDeliveryTime as timestamp,\n\t\tConfirmedReceivedBy as string,\n\t\tLastEditedBy as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: '',\n\tformat: 'query') ~> sourceInvoices\nsource(output(\n\t\tPackageTypeID as integer,\n\t\tPackageTypeName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [PackageTypeID],[PackageTypeName] FROM [Warehouse].[PackageTypes]',\n\tformat: 'query') ~> sourcePackageTypes\nsourceSales filter(toDate(LastEditedWhen) >= toDate($cutoff_time)) ~> Filter\nFilter, sourceCustomers join(sourceSales@CustomerID == sourceCustomers@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1, sourceInvoices join(sourceSales@OrderID == sourceInvoices@OrderID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin2, sourceInvoiceLines join(sourceInvoices@InvoiceID == sourceInvoiceLines@InvoiceID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join3\nJoin4 derive({Total Excluding Tax} = Quantity * UnitPrice,\n\t\t{Tax Amount} = Quantity * UnitPrice * TaxRate/100,\n\t\t{Total Including Tax} = Quantity * UnitPrice * (1 + TaxRate/100),\n\t\t{Delivery Date Key} = toDate(sourceInvoices@ConfirmedDeliveryTime),\n\t\t{Lineage Key} = toTimestamp($cutoff_time, 'yyyy-MM-dd HH:mm:ss')) ~> DerivedColumn\nJoin3, sourcePackageTypes join(sourceInvoiceLines@PackageTypeID == sourcePackageTypes@PackageTypeID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nDerivedColumn sink(input(\n\t\t{Sale Staging Key} as long,\n\t\t{City Key} as integer,\n\t\t{Customer Key} as integer,\n\t\t{Bill To Customer Key} as integer,\n\t\t{Stock Item Key} as integer,\n\t\t{Invoice Date Key} as date,\n\t\t{Delivery Date Key} as date,\n\t\t{Salesperson Key} as integer,\n\t\t{WWI Invoice ID} as integer,\n\t\tDescription as string,\n\t\tPackage as string,\n\t\tQuantity as integer,\n\t\t{Unit Price} as decimal(18,2),\n\t\t{Tax Rate} as decimal(18,3),\n\t\t{Total Excluding Tax} as decimal(18,2),\n\t\t{Tax Amount} as decimal(18,2),\n\t\tProfit as decimal(18,2),\n\t\t{Total Including Tax} as decimal(18,2),\n\t\t{Total Dry Items} as integer,\n\t\t{Total Chiller Items} as integer,\n\t\t{WWI City ID} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\t{WWI Bill To Customer ID} as integer,\n\t\t{WWI Stock Item ID} as integer,\n\t\t{WWI Salesperson ID} as integer,\n\t\t{Last Modified When} as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\t{City Key} = DeliveryCityID,\n\t\t{Customer Key} = sourceCustomers@CustomerID,\n\t\t{Bill To Customer Key} = sourceCustomers@BillToCustomerID,\n\t\t{Stock Item Key} = StockItemID,\n\t\t{Invoice Date Key} = InvoiceDate,\n\t\t{Delivery Date Key},\n\t\t{Salesperson Key} = sourceSales@SalespersonPersonID,\n\t\t{WWI Invoice ID} = sourceInvoices@InvoiceID,\n\t\tDescription,\n\t\tPackage = PackageTypeName,\n\t\tQuantity,\n\t\t{Unit Price} = UnitPrice,\n\t\t{Tax Rate} = TaxRate,\n\t\t{Total Excluding Tax},\n\t\t{Tax Amount} = TaxAmount,\n\t\tProfit = LineProfit,\n\t\t{Total Including Tax},\n\t\t{Total Dry Items} = sourceSales@OrderID,\n\t\t{Total Chiller Items} = sourceSales@OrderID,\n\t\t{WWI City ID} = DeliveryCityID,\n\t\t{WWI Customer ID} = sourceSales@CustomerID,\n\t\t{WWI Bill To Customer ID} = sourceCustomers@BillToCustomerID,\n\t\t{WWI Stock Item ID} = StockItemID,\n\t\t{WWI Salesperson ID} = sourceSales@SalespersonPersonID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink"
		}
	}
}