{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "wideworldImporterDF"
		},
		"wwi_DW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wwi_DW'"
		},
		"wwi_ODS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wwi_ODS'"
		},
		"wwi_OLTP_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wwi_OLTP'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/wwi_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('wwi_DW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wwi_ODS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('wwi_ODS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wwi_OLTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('wwi_OLTP_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLcutoff')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_ODS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ods"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table Name",
						"type": "nvarchar"
					},
					{
						"name": "Cutoff Time",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "ETL Cutoff"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_ODS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/app_people')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullName",
						"type": "nvarchar"
					},
					{
						"name": "PreferredName",
						"type": "nvarchar"
					},
					{
						"name": "SearchName",
						"type": "nvarchar"
					},
					{
						"name": "IsPermittedToLogon",
						"type": "bit"
					},
					{
						"name": "LogonName",
						"type": "nvarchar"
					},
					{
						"name": "IsExternalLogonProvider",
						"type": "bit"
					},
					{
						"name": "HashedPassword",
						"type": "varbinary"
					},
					{
						"name": "IsSystemUser",
						"type": "bit"
					},
					{
						"name": "IsEmployee",
						"type": "bit"
					},
					{
						"name": "IsSalesperson",
						"type": "bit"
					},
					{
						"name": "UserPreferences",
						"type": "nvarchar"
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Photo",
						"type": "varbinary"
					},
					{
						"name": "CustomFields",
						"type": "nvarchar"
					},
					{
						"name": "OtherLanguages",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Application",
					"table": "People"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_ODS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ods"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Staging Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Customer ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Bill To Customer",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "Buying Group",
						"type": "nvarchar"
					},
					{
						"name": "Primary Contact",
						"type": "nvarchar"
					},
					{
						"name": "Postal Code",
						"type": "nvarchar"
					},
					{
						"name": "Valid From",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Valid To",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "Customer_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_ODS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sale_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_ODS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ods"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Sale Staging Key",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "City Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Bill To Customer Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock Item Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Invoice Date Key",
						"type": "date"
					},
					{
						"name": "Delivery Date Key",
						"type": "date"
					},
					{
						"name": "Salesperson Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Invoice ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unit Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Tax Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Total Excluding Tax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Tax Amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Total Including Tax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Total Dry Items",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total Chiller Items",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI City ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Customer ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Bill To Customer ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Stock Item ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWI Salesperson ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last Modified When",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "Sale_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_ODS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_CustomerCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "CustomerCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_buyingGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BuyingGroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuyingGroupName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "BuyingGroups"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "BillToCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BuyingGroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PrimaryContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AlternateContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditLimit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AccountOpenedDate",
						"type": "date"
					},
					{
						"name": "StandardDiscountPercentage",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "IsStatementSent",
						"type": "bit"
					},
					{
						"name": "IsOnCreditHold",
						"type": "bit"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PhoneNumber",
						"type": "nvarchar"
					},
					{
						"name": "FaxNumber",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryRun",
						"type": "nvarchar"
					},
					{
						"name": "RunPosition",
						"type": "nvarchar"
					},
					{
						"name": "WebsiteURL",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryLocation",
						"type": "WideWorldImporters.sys.geography"
					},
					{
						"name": "PostalAddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "PostalPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "Customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_invoiceLines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "InvoiceLineID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "PackageTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LineProfit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ExtendedPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "InvoiceLines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_invoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "InvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountsPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalespersonPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PackedByPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDate",
						"type": "date"
					},
					{
						"name": "CustomerPurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "IsCreditNote",
						"type": "bit"
					},
					{
						"name": "CreditNoteReason",
						"type": "nvarchar"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryInstructions",
						"type": "nvarchar"
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeliveryRun",
						"type": "nvarchar"
					},
					{
						"name": "RunPosition",
						"type": "nvarchar"
					},
					{
						"name": "ReturnedDeliveryData",
						"type": "nvarchar"
					},
					{
						"name": "ConfirmedDeliveryTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ConfirmedReceivedBy",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "Invoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalespersonPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickedByPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BackorderOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDate",
						"type": "date"
					},
					{
						"name": "ExpectedDeliveryDate",
						"type": "date"
					},
					{
						"name": "CustomerPurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "IsUndersupplyBackordered",
						"type": "bit"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryInstructions",
						"type": "nvarchar"
					},
					{
						"name": "InternalComments",
						"type": "nvarchar"
					},
					{
						"name": "PickingCompletedWhen",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/warehouse_PackageTypes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wwi_OLTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "oltp"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PackageTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PackageTypeName",
						"type": "nvarchar"
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Warehouse",
					"table": "PackageTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wwi_OLTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_OLTP_ODS_ETL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_orders",
								"type": "DatasetReference"
							},
							"name": "sourceSales"
						},
						{
							"dataset": {
								"referenceName": "sales_customers",
								"type": "DatasetReference"
							},
							"name": "sourceCustomers"
						},
						{
							"dataset": {
								"referenceName": "sales_invoiceLines",
								"type": "DatasetReference"
							},
							"name": "sourceInvoiceLines"
						},
						{
							"dataset": {
								"referenceName": "sales_invoices",
								"type": "DatasetReference"
							},
							"name": "sourceInvoices"
						},
						{
							"dataset": {
								"referenceName": "warehouse_PackageTypes",
								"type": "DatasetReference"
							},
							"name": "sourcePackageTypes"
						},
						{
							"dataset": {
								"referenceName": "sales_CustomerCategories",
								"type": "DatasetReference"
							},
							"name": "sourceCustCategory"
						},
						{
							"dataset": {
								"referenceName": "sales_buyingGroups",
								"type": "DatasetReference"
							},
							"name": "sourceBuyingGroups"
						},
						{
							"dataset": {
								"referenceName": "app_people",
								"type": "DatasetReference"
							},
							"name": "sourcePeople"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sale_staging",
								"type": "DatasetReference"
							},
							"name": "sinkSale"
						},
						{
							"dataset": {
								"referenceName": "customer_staging",
								"type": "DatasetReference"
							},
							"name": "sinkCust"
						},
						{
							"dataset": {
								"referenceName": "ETLcutoff",
								"type": "DatasetReference"
							},
							"name": "sinkETLcutoff2"
						}
					],
					"transformations": [
						{
							"name": "Filter"
						},
						{
							"name": "JoinCust"
						},
						{
							"name": "JoinInvoices"
						},
						{
							"name": "JoinInvoiceLines"
						},
						{
							"name": "DerivedColumn"
						},
						{
							"name": "JoinPackage"
						},
						{
							"name": "JoinCategory"
						},
						{
							"name": "JoinBuyingGroup"
						},
						{
							"name": "JoinPrimaryContact"
						},
						{
							"name": "JoinBill2Cust"
						},
						{
							"name": "Select"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow2"
						},
						{
							"name": "SelectSale"
						},
						{
							"name": "SelectCust"
						},
						{
							"name": "AlterRow3"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Union"
						}
					],
					"script": "parameters{\n\tcutoff_time as string ('2000-01-01 00:00:00')\n}\nsource(output(\n\t\tOrderID as integer,\n\t\tCustomerID as integer,\n\t\tSalespersonPersonID as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [OrderID], [CustomerID], [SalespersonPersonID],[LastEditedWhen] FROM [Sales].[Orders]',\n\tformat: 'query') ~> sourceSales\nsource(output(\n\t\tCustomerID as integer,\n\t\tBillToCustomerID as integer,\n\t\tDeliveryCityID as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tPostalPostalCode as string,\n\t\tCustomerName as string,\n\t\tCustomerCategoryID as integer,\n\t\tBuyingGroupID as integer,\n\t\tPrimaryContactPersonID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [CustomerID], [BillToCustomerID], \\n[DeliveryCityID], \\n[ValidFrom], [ValidTo], [PostalPostalCode], [CustomerName], [CustomerCategoryID], [BuyingGroupID], [PrimaryContactPersonID] FROM [Sales].[Customers]',\n\tformat: 'query') ~> sourceCustomers\nsource(output(\n\t\tInvoiceID as integer,\n\t\tPackageTypeID as integer,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2),\n\t\tTaxRate as decimal(18,3),\n\t\tTaxAmount as decimal(18,2),\n\t\tLineProfit as decimal(18,2),\n\t\tDescription as string,\n\t\tStockItemID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [InvoiceID], [PackageTypeID], [Quantity], [UnitPrice], [TaxRate], [TaxAmount], [LineProfit], [Description], [StockItemID] FROM [Sales].[InvoiceLines]',\n\tformat: 'query') ~> sourceInvoiceLines\nsource(output(\n\t\tInvoiceID as integer,\n\t\tTotalDryItems as integer,\n\t\tTotalChillerItems as integer,\n\t\tOrderID as integer,\n\t\tInvoiceDate as date,\n\t\tConfirmedDeliveryTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [InvoiceID], [TotalDryItems], [TotalChillerItems], [OrderID],  [InvoiceDate], [ConfirmedDeliveryTime] FROM [Sales].[Invoices]',\n\tformat: 'query') ~> sourceInvoices\nsource(output(\n\t\tPackageTypeID as integer,\n\t\tPackageTypeName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [PackageTypeID],[PackageTypeName] FROM [Warehouse].[PackageTypes]',\n\tformat: 'query') ~> sourcePackageTypes\nsource(output(\n\t\tCustomerCategoryID as integer,\n\t\tCustomerCategoryName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [CustomerCategoryID], [CustomerCategoryName] FROM [Sales].[CustomerCategories]',\n\tformat: 'query') ~> sourceCustCategory\nsource(output(\n\t\tBuyingGroupID as integer,\n\t\tBuyingGroupName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [BuyingGroupID], [BuyingGroupName] FROM [Sales].[BuyingGroups]',\n\tformat: 'query') ~> sourceBuyingGroups\nsource(output(\n\t\tPersonID as integer,\n\t\tFullName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [PersonID], [FullName] FROM [Application].[People]',\n\tformat: 'query') ~> sourcePeople\nsourceSales filter(LastEditedWhen >= toTimestamp($cutoff_time,'yyyy-MM-dd HH:mm:ss')) ~> Filter\nFilter, sourceCustomers join(sourceSales@CustomerID == sourceCustomers@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCust\nJoinCust, sourceInvoices join(sourceSales@OrderID == sourceInvoices@OrderID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinInvoices\nJoinInvoices, sourceInvoiceLines join(sourceInvoices@InvoiceID == sourceInvoiceLines@InvoiceID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinInvoiceLines\nJoinPackage derive({Total Excluding Tax} = Quantity * UnitPrice,\n\t\t{Tax Amount} = Quantity * UnitPrice * TaxRate/100,\n\t\t{Total Including Tax} = Quantity * UnitPrice * (1 + TaxRate/100),\n\t\t{Delivery Date Key} = toDate(ConfirmedDeliveryTime),\n\t\t{Cutoff Time} = $cutoff_time,\n\t\t{Table Name} = 'Sale') ~> DerivedColumn\nJoinInvoiceLines, sourcePackageTypes join(sourceInvoiceLines@PackageTypeID == sourcePackageTypes@PackageTypeID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinPackage\nFilter2, sourceCustCategory join(sourceCustomers@CustomerCategoryID == sourceCustCategory@CustomerCategoryID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCategory\nJoinCategory, sourceBuyingGroups join(sourceCustomers@BuyingGroupID == sourceBuyingGroups@BuyingGroupID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBuyingGroup\nJoinBuyingGroup, sourcePeople join(PrimaryContactPersonID == PersonID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinPrimaryContact\nJoinPrimaryContact, Select join(BillToCustomerID == Select@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBill2Cust\nsourceCustomers select(mapColumn(\n\t\tCustomerID,\n\t\tCustomerName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nsourceCustomers filter(toTimestamp($cutoff_time,'yyyy-MM-dd HH:mm:ss') <= ValidFrom) ~> Filter2\nJoinBill2Cust derive({table name} = 'Customer',\n\t\tcutoff = $cutoff_time) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(true())) ~> AlterRow2\nDerivedColumn select(mapColumn(\n\t\t{City Key} = DeliveryCityID,\n\t\t{Customer Key} = sourceSales@CustomerID,\n\t\t{Bill To Customer Key} = BillToCustomerID,\n\t\t{Stock Item Key} = StockItemID,\n\t\t{Invoice Date Key} = InvoiceDate,\n\t\t{Delivery Date Key},\n\t\t{Salesperson Key} = SalespersonPersonID,\n\t\t{WWI Invoice ID} = sourceInvoices@InvoiceID,\n\t\tDescription,\n\t\tPackage = PackageTypeName,\n\t\tQuantity,\n\t\t{Unit Price} = UnitPrice,\n\t\t{Tax Rate} = TaxRate,\n\t\t{Total Excluding Tax},\n\t\t{Tax Amount} = TaxAmount,\n\t\tProfit = LineProfit,\n\t\t{Total Including Tax},\n\t\t{Total Dry Items} = TotalDryItems,\n\t\t{Total Chiller Items} = TotalChillerItems,\n\t\t{WWI City ID} = DeliveryCityID,\n\t\t{WWI Customer ID} = sourceSales@CustomerID,\n\t\t{WWI Bill To Customer ID} = BillToCustomerID,\n\t\t{WWI Stock Item ID} = StockItemID,\n\t\t{WWI Salesperson ID} = SalespersonPersonID,\n\t\t{Last Modified When} = LastEditedWhen\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectSale\nJoinBill2Cust select(mapColumn(\n\t\t{WWI Customer ID} = sourceCustomers@CustomerID,\n\t\tCustomer = sourceCustomers@CustomerName,\n\t\t{Bill To Customer} = Select@CustomerName,\n\t\tCategory = CustomerCategoryName,\n\t\t{Buying Group} = BuyingGroupName,\n\t\t{Primary Contact} = FullName,\n\t\t{Postal Code} = PostalPostalCode,\n\t\t{Valid From} = ValidFrom,\n\t\t{Valid To} = ValidTo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCust\nDerivedColumn alterRow(upsertIf(true())) ~> AlterRow3\nAlterRow3 aggregate(groupBy({Table Name}),\n\t{Cutoff Time} = max({Cutoff Time})) ~> Aggregate1\nAlterRow2 aggregate(groupBy({Table Name} = {table name}),\n\t{Cutoff Time} = max(cutoff)) ~> Aggregate2\nAggregate2, Aggregate1 union(byName: true)~> Union\nSelectSale sink(input(\n\t\t{Sale Staging Key} as long,\n\t\t{City Key} as integer,\n\t\t{Customer Key} as integer,\n\t\t{Bill To Customer Key} as integer,\n\t\t{Stock Item Key} as integer,\n\t\t{Invoice Date Key} as date,\n\t\t{Delivery Date Key} as date,\n\t\t{Salesperson Key} as integer,\n\t\t{WWI Invoice ID} as integer,\n\t\tDescription as string,\n\t\tPackage as string,\n\t\tQuantity as integer,\n\t\t{Unit Price} as decimal(18,2),\n\t\t{Tax Rate} as decimal(18,3),\n\t\t{Total Excluding Tax} as decimal(18,2),\n\t\t{Tax Amount} as decimal(18,2),\n\t\tProfit as decimal(18,2),\n\t\t{Total Including Tax} as decimal(18,2),\n\t\t{Total Dry Items} as integer,\n\t\t{Total Chiller Items} as integer,\n\t\t{WWI City ID} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\t{WWI Bill To Customer ID} as integer,\n\t\t{WWI Stock Item ID} as integer,\n\t\t{WWI Salesperson ID} as integer,\n\t\t{Last Modified When} as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\t{City Key},\n\t\t{Customer Key},\n\t\t{Bill To Customer Key},\n\t\t{Stock Item Key},\n\t\t{Invoice Date Key},\n\t\t{Delivery Date Key},\n\t\t{Salesperson Key},\n\t\t{WWI Invoice ID},\n\t\tDescription,\n\t\tPackage,\n\t\tQuantity,\n\t\t{Unit Price},\n\t\t{Tax Rate},\n\t\t{Total Excluding Tax},\n\t\t{Tax Amount},\n\t\tProfit,\n\t\t{Total Including Tax},\n\t\t{Total Dry Items},\n\t\t{Total Chiller Items},\n\t\t{WWI City ID},\n\t\t{WWI Customer ID},\n\t\t{WWI Bill To Customer ID},\n\t\t{WWI Stock Item ID},\n\t\t{WWI Salesperson ID},\n\t\t{Last Modified When}\n\t),\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkSale\nSelectCust sink(input(\n\t\t{Customer Staging Key} as integer,\n\t\t{WWI Customer ID} as integer,\n\t\tCustomer as string,\n\t\t{Bill To Customer} as string,\n\t\tCategory as string,\n\t\t{Buying Group} as string,\n\t\t{Primary Contact} as string,\n\t\t{Postal Code} as string,\n\t\t{Valid From} as timestamp,\n\t\t{Valid To} as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\t{WWI Customer ID},\n\t\tCustomer,\n\t\t{Bill To Customer},\n\t\tCategory,\n\t\t{Buying Group},\n\t\t{Primary Contact},\n\t\t{Postal Code},\n\t\t{Valid From},\n\t\t{Valid To}\n\t),\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkCust\nUnion sink(input(\n\t\t{Table Name} as string,\n\t\t{Cutoff Time} as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Table Name'],\n\tformat: 'table',\n\tmapColumn(\n\t\t{Table Name},\n\t\t{Cutoff Time}\n\t),\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkETLcutoff2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_orders')]",
				"[concat(variables('factoryId'), '/datasets/sales_customers')]",
				"[concat(variables('factoryId'), '/datasets/sales_invoiceLines')]",
				"[concat(variables('factoryId'), '/datasets/sales_invoices')]",
				"[concat(variables('factoryId'), '/datasets/warehouse_PackageTypes')]",
				"[concat(variables('factoryId'), '/datasets/sales_CustomerCategories')]",
				"[concat(variables('factoryId'), '/datasets/sales_buyingGroups')]",
				"[concat(variables('factoryId'), '/datasets/app_people')]",
				"[concat(variables('factoryId'), '/datasets/sale_staging')]",
				"[concat(variables('factoryId'), '/datasets/customer_staging')]",
				"[concat(variables('factoryId'), '/datasets/ETLcutoff')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_OLTP2ODS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_OLTP_ODS_ETL",
								"type": "DataFlowReference",
								"parameters": {
									"cutoff_time": {
										"value": "@pipeline().parameters.p_cutoff_time",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"sourceSales": {},
									"sourceCustomers": {},
									"sourceInvoiceLines": {},
									"sourceInvoices": {},
									"sourcePackageTypes": {},
									"sourceCustCategory": {},
									"sourceBuyingGroups": {},
									"sourcePeople": {},
									"sinkSale": {},
									"sinkCust": {},
									"sinkETLcutoff2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"parameters": {
					"p_cutoff_time": {
						"type": "string",
						"defaultValue": "'2000-01-01 00:00:00'"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_OLTP_ODS_ETL')]"
			]
		}
	]
}